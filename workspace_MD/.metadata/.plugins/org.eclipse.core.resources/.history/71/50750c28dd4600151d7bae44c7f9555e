package br.com.sistemaxm.entidades;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;


@Entity
public class Cliente implements Serializable {

	private static final long serialVersionUID = 1L;
		
	private Long codigo;
	private Pessoa cliente;
	private List<ContratoLocacao> locacoes;

    public Cliente () {
    	
    }
    
    public Cliente(Long codigo, Pessoa cliente) {
    	this.codigo=codigo;
    	this.cliente=cliente;
    }
    
	private boolean pf;
	private boolean pj;
	
		
	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	public Long getCodigo() {
		return codigo;
	}
	
	public void setCodigo(Long codigo) {
		this.codigo = codigo;
	}
	
	public boolean isPf() {
		return pf;
	}
	public void setPf(boolean pf) {
		this.pf = pf;
	}
	public boolean isPj() {
		return pj;
	}
	public void setPj(boolean pj) {
		this.pj = pj;
	}
	
	@OneToOne(cascade=CascadeType.ALL)
	@JoinColumn(name="cod_pessoa")
	public Pessoa getCliente() {
		return cliente;
	}
	public void setCliente(Pessoa cliente) {
		this.cliente = cliente;
	}
	
	@OneToMany(mappedBy="cliente", fetch=FetchType.LAZY, cascade=CascadeType.ALL)
	public List<ContratoLocacao> getLocacoes() {
		return locacoes;
	}

	public void setLocacoes(List<ContratoLocacao> locacoes) {
		this.locacoes = locacoes;
	}
	
	@Override
	public int hashCode() {
		int hash = 0;
		hash += (this.codigo != null ? this.codigo.hashCode() : 0);

		return hash;
	}

	@Override
	public boolean equals(Object object) {
		if (!(object instanceof Cliente)) {
			return false;
		}

		Cliente ent = (Cliente) object;

		if ((this.codigo == null && ent.codigo != null)
				|| (this.codigo != null && !this.codigo.equals(ent.codigo))) {
			return false;
		}

		return true;
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}
}
